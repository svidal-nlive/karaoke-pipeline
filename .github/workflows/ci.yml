name: CI Pipeline (All Services)

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"] # , "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies and run tests for all services
      run: |
        set -e
        for dir in */ ; do
          echo "============================"
          echo "Testing service: $dir"
          echo "============================"
          cd "$dir"
          if [ -f requirements.txt ]; then
            # ðŸŸ¢ Special fix for splitter: Always install numpy wheel before requirements.txt
            if [ "$dir" = "splitter/" ]; then
              echo "Preinstalling numpy wheel for splitter"
              pip install --upgrade pip setuptools wheel
              pip install "numpy==1.23.5" --only-binary=:all:
            fi
            pip install -r requirements.txt
          fi
          # Run tests if they exist
          if compgen -G "test_*.py" > /dev/null; then
            echo "Running tests in $dir"
            pytest || echo "No pytest found"
          else
            echo "No tests found in $dir, skipping tests."
          fi
          cd ..
        done

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install docker-compose

    - name: E2E Pipeline Test
      run: |
        pip install pytest requests
        pytest e2e/test_pipeline_e2e.py --tb=short --maxfail=1
